#!/bin/bash

ACM_CONFIG_FILE="$HOME/.claude_config"
ACM_CURRENT_FILE="$HOME/.claude_current"

show_help() {
    cat << EOF
ACM (AI Configuration Manager) - 类似 nvm/nrm 的 AI API 配置切换工具

用法:
    acm <command> [arguments]

命令:
    use <alias>              切换到指定的配置
    list                     显示所有可用配置
    add <alias> <name> <token> <url>  添加新配置
    remove <alias>           删除指定配置
    current                  显示当前使用的配置
    help                     显示此帮助信息

示例:
    acm use kimi            # 切换到 kimi 配置
    acm list                # 查看所有配置
    acm add openai OpenAI sk-xxx https://api.openai.com
    acm remove openai       # 删除 openai 配置
    acm current             # 查看当前配置

配置文件位置:
    ~/.claude_config        # 配置存储文件
    ~/.claude_current       # 当前配置记录文件
EOF
}

init_config() {
    if [[ ! -f "$ACM_CONFIG_FILE" ]]; then
        cat > "$ACM_CONFIG_FILE" << 'EOF'
ww|问问Code|sk-xxxxxxWWWWWWxxxxxx|https://code.wenwen-ai.com
any|AnyRouter|sk-xxxxxxANYxxxxxx|https://anyrouter.top
kimi|月之暗面|sk-xxxxxxKIMIxxxxxx|https://api.moonshot.cn/anthropic
EOF
        echo "已创建默认配置文件: $ACM_CONFIG_FILE"
        echo "请编辑此文件，填入您的真实 API 密钥"
    fi
}

list_configs() {
    init_config
    echo "可用配置:"
    printf "%-10s %-15s %-20s %s\n" "别名" "名称" "API密钥(前15位)" "API地址"
    echo "------------------------------------------------------------"
    while IFS='|' read -r alias name token url; do
        token_preview="${token:0:15}..."
        printf "%-10s %-15s %-20s %s\n" "$alias" "$name" "$token_preview" "$url"
    done < "$ACM_CONFIG_FILE"
}

use_config() {
    local target_alias="$1"
    if [[ -z "$target_alias" ]]; then
        echo "错误: 请指定配置别名"
        echo "使用 'acm list' 查看可用配置"
        return 1
    fi

    init_config
    local line=$(grep "^$target_alias|" "$ACM_CONFIG_FILE")
    if [[ -z "$line" ]]; then
        echo "错误: 未找到配置 '$target_alias'"
        echo "使用 'acm list' 查看可用配置"
        return 1
    fi

    IFS='|' read -r alias name token url <<< "$line"
    
    export ANTHROPIC_AUTH_TOKEN="$token"
    export ANTHROPIC_BASE_URL="$url"
    
    echo "$line" > "$ACM_CURRENT_FILE"
    
    echo "已切换到: $name"
    echo "API地址: $url"
    echo "密钥: ${token:0:15}..."
    
    echo ""
    echo "环境变量已设置，请在当前终端会话中使用。"
    echo "要在新终端中自动应用此配置，请将以下命令添加到您的 shell 配置文件:"
    echo "export ANTHROPIC_AUTH_TOKEN=\"$token\""
    echo "export ANTHROPIC_BASE_URL=\"$url\""
}

add_config() {
    local alias="$1"
    local name="$2" 
    local token="$3"
    local url="$4"
    
    if [[ -z "$alias" || -z "$name" || -z "$token" || -z "$url" ]]; then
        echo "错误: 参数不完整"
        echo "用法: acm add <alias> <name> <token> <url>"
        return 1
    fi
    
    init_config
    
    if grep -q "^$alias|" "$ACM_CONFIG_FILE"; then
        echo "错误: 配置别名 '$alias' 已存在"
        return 1
    fi
    
    echo "$alias|$name|$token|$url" >> "$ACM_CONFIG_FILE"
    echo "已添加配置: $name ($alias)"
}

remove_config() {
    local alias="$1"
    if [[ -z "$alias" ]]; then
        echo "错误: 请指定要删除的配置别名"
        return 1
    fi
    
    if [[ ! -f "$ACM_CONFIG_FILE" ]]; then
        echo "错误: 配置文件不存在"
        return 1
    fi
    
    if ! grep -q "^$alias|" "$ACM_CONFIG_FILE"; then
        echo "错误: 配置 '$alias' 不存在"
        return 1
    fi
    
    local name=$(grep "^$alias|" "$ACM_CONFIG_FILE" | cut -d'|' -f2)
    
    grep -v "^$alias|" "$ACM_CONFIG_FILE" > "${ACM_CONFIG_FILE}.tmp"
    mv "${ACM_CONFIG_FILE}.tmp" "$ACM_CONFIG_FILE"
    
    if [[ -f "$ACM_CURRENT_FILE" ]] && grep -q "^$alias|" "$ACM_CURRENT_FILE"; then
        rm -f "$ACM_CURRENT_FILE"
        echo "当前配置已清除"
    fi
    
    echo "已删除配置: $name ($alias)"
}

show_current() {
    if [[ -f "$ACM_CURRENT_FILE" ]]; then
        local line=$(cat "$ACM_CURRENT_FILE")
        IFS='|' read -r alias name token url <<< "$line"
        echo "当前配置:"
        echo "别名: $alias"
        echo "名称: $name" 
        echo "API地址: $url"
        echo "密钥: ${token:0:15}..."
        
        if [[ "$ANTHROPIC_AUTH_TOKEN" == "$token" && "$ANTHROPIC_BASE_URL" == "$url" ]]; then
            echo "状态: 已激活 ✓"
        else
            echo "状态: 未激活 (请运行 'acm use $alias' 激活)"
        fi
    else
        echo "当前没有设置任何配置"
        echo "使用 'acm use <alias>' 设置配置"
    fi
}

case "$1" in
    "use")
        use_config "$2"
        ;;
    "list"|"ls")
        list_configs
        ;;
    "add")
        add_config "$2" "$3" "$4" "$5"
        ;;
    "remove"|"rm")
        remove_config "$2"
        ;;
    "current")
        show_current
        ;;
    "help"|"--help"|"-h"|"")
        show_help
        ;;
    *)
        echo "错误: 未知命令 '$1'"
        echo "使用 'acm help' 查看帮助信息"
        exit 1
        ;;
esac